name: Auto Tag Release

on:
  pull_request:
    types: [closed]

permissions:
  contents: write

jobs:
  tag-release:
    if: |
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'release')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Extract version from commit message
        id: extract_version
        run: |
          # Get the merge commit message
          MERGE_COMMIT_SHA="${{ github.event.pull_request.merge_commit_sha }}"
          COMMIT_MESSAGE=$(git log -1 --pretty=%s $MERGE_COMMIT_SHA)
          echo "Commit message: $COMMIT_MESSAGE"
          
          # Extract version from "Release X.Y.Z" pattern
          if [[ "$COMMIT_MESSAGE" =~ Release[[:space:]]+([0-9]+\.[0-9]+\.[0-9]+) ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "Extracted version: $VERSION"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "Could not extract version from commit message"
            exit 1
          fi
      
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
      
      - name: Create and push tag
        run: |
          VERSION="${{ steps.extract_version.outputs.version }}"
          TAG_NAME="v$VERSION"
          
          # Check if tag already exists
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists"
            exit 1
          fi
          
          # Create signed annotated tag
          git tag -s -m "Release $VERSION" "$TAG_NAME"
          
          # Push the tag (will use the persisted auth from checkout)
          git push origin "$TAG_NAME"
          
          echo "Successfully created and pushed tag $TAG_NAME"
      
      - name: Trigger release workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'release.yml',
              ref: 'main',
              inputs: {
                tag: 'v${{ steps.extract_version.outputs.version }}'
              }
            });
            console.log('Triggered release workflow for tag v${{ steps.extract_version.outputs.version }}');