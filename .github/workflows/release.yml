name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.5.0)'
        required: true
        type: string

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    container: quay.io/coreos-assembler/fcos-buildroot:testing-devel
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.tag || github.ref }}
      
      - name: Install deps
        run: ./ci/installdeps.sh
      
      - name: Mark git checkout as safe
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      
      - name: Install vendor tool
        run: cargo install cargo-vendor-filterer
      
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: "release"
      
      - name: Get version from tag
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.tag }}"
            VERSION="${VERSION#v}"
          else
            VERSION="${GITHUB_REF#refs/tags/v}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "TAG_NAME=v$VERSION" >> $GITHUB_OUTPUT
      
      - name: Run cargo xtask package
        run: cargo xtask package
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.TAG_NAME }}
          release_name: Release ${{ steps.get_version.outputs.TAG_NAME }}
          draft: true
          prerelease: false
          body: |
            ## bootc ${{ steps.get_version.outputs.VERSION }}
            
            ### Changes
            
            Auto-generated release notes will be populated here.
            
            ### Assets
            
            - `bootc-${{ steps.get_version.outputs.VERSION }}-vendor.tar.zstd` - Vendored dependencies archive
            - `bootc-${{ steps.get_version.outputs.VERSION }}.tar.zstd` - Source archive
      
      - name: Upload vendor archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/bootc-${{ steps.get_version.outputs.VERSION }}-vendor.tar.zstd
          asset_name: bootc-${{ steps.get_version.outputs.VERSION }}-vendor.tar.zstd
          asset_content_type: application/zstd
      
      - name: Upload source archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/bootc-${{ steps.get_version.outputs.VERSION }}.tar.zstd
          asset_name: bootc-${{ steps.get_version.outputs.VERSION }}.tar.zstd
          asset_content_type: application/zstd
